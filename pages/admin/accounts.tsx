// This is a skeleton starter React page generated by Plasmic.
// This file is owned by you, feel free to edit as you see fit.
import * as React from "react";
import * as ph from "@plasmicapp/host";
import GlobalContextsProvider from "../../components/plasmic/laziness_demo/PlasmicGlobalContextsProvider";
import { ScreenVariantProvider } from "../../components/plasmic/landing_page_starter/PlasmicGlobalVariant__Screen";
import { PlasmicAdminAccounts } from "../../components/plasmic/laziness_demo/PlasmicAdminAccounts";
import { useRouter } from "next/router";
import { getIsAdmin, getUsers } from "../../utils/supabase-server";
import { InferGetServerSidePropsType, GetServerSidePropsContext } from "next";
import { UserDetails } from "../../types";
import AccountCard from "../../components/AccountCard";

function AdminAccounts({
  users,
}: InferGetServerSidePropsType<typeof getServerSideProps>) {
  return (
    <GlobalContextsProvider>
      <ph.PageParamsProvider
        params={useRouter().query}
        query={useRouter().query}
      >
        <PlasmicAdminAccounts
          accountCardList={{
            children: users.map((user: UserDetails) => (
              <AccountCard
                userId={user.id}
                key={user.id}
                name={user.user_name}
                company={user.company}
                email={user.email}
                phoneNumber={user.phone}
                address={user.address}
              />
            )),
          }}
        />
      </ph.PageParamsProvider>
    </GlobalContextsProvider>
  );
}

export default AdminAccounts;

export const getServerSideProps = async (ctx: GetServerSidePropsContext) => {
  const isAdmin = await getIsAdmin(ctx);
  if (!isAdmin) {
    return {
      redirect: { permanent: false, destination: "/" },
    };
  }
  const users = await getUsers(ctx);
  return {
    props: { users },
  };
};
